name: Deno Deploy

on:
  push:
    branches:
      - main # Trigger on pushes to main
  pull_request:
    branches:
      - main # Trigger on PRs targeting main (for preview deployments)

jobs:
  deploy:
    name: Deploy to Deno Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to checkout the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x # Use the latest stable Deno version

      # Uncomment if you have dependencies that need caching
      # - name: Cache Deno dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/deno
      #     key: ${{ runner.os }}-deno-${{ hashFiles('**/lock.json') }} # Adjust if using a different lock file
      #     restore-keys: |
      #       ${{ runner.os }}-deno-

      # Optional: Check formatting (ignore lib directory)
      - name: Check formatting
        run: deno fmt --check --ignore=lib/

      # Optional: Lint code (ignore lib, scripts, and client package)
      - name: Lint code
        run: deno lint --ignore=lib/,scripts/,packages/permit2-rpc-client/

      # Optional: Run tests
      # - name: Run tests
      #   run: deno test --allow-net --allow-read --allow-env # Add necessary permissions

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "permit2-rpc-proxy"
          entrypoint: "packages/permit2-rpc-server/src/deno-server.ts" # Full path from repo root
          # root: "packages/permit2-rpc-server" # Removed root parameter
          # The action automatically determines production vs preview based on the ref
